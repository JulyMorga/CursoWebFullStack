$grid-columns:      12;
$grid-gutter-width: 30px;
$grid-breakpoints: (
	// Extra small screen / phone
	xs: 0,
	// Small screen / phone
	sm: 576px,
	// Medium screen / tablet
	md: 768px,
	// Large screen / desktop
	lg: 992px,
	// Extra large screen / wide desktop
	xl: 1200px
);
$container-max-widths: (
	sm: 540px,
	md: 720px,
	lg: 960px,
	xl: 1140px
);


// Creates a wrapper for a series of columns
@include make-row();
// Make the element grid-ready (applying everything but the width)
@include make-col-ready();
@include make-col($size, $columns: $grid-columns);
// Get fancy by offsetting, or changing the sort order
@include make-col-offset($size, $columns: $grid-columns);


.example-container {
	@include make-container();
		// Make sure to define this width after the mixin to override
		// `width: 100%` generated by `make-container()`
		width: 800px;
	}
	.example-row {
		@include make-row();
	}
	.example-content-main {
		@include make-col-ready();
		@include media-breakpoint-up(sm) {
		@include make-col(6);
	}
	@include media-breakpoint-up(lg) {
		@include make-col(8);
	}
	}
	.example-content-secondary {
		@include make-col-ready();
		@include media-breakpoint-up(sm) {
		@include make-col(6);
	}
	@include media-breakpoint-up(lg) {
		@include make-col(4);
	}
}

$grid-columns: 12 !default;
$grid-gutter-width: 30px !default;

$grid-breakpoints: (
	xs: 0,
	sm: 480px,
	md: 768px,
	lg: 1024px
);
$container-max-widths: (
	sm: 420px,
	md: 720px,
	lg: 960px
);